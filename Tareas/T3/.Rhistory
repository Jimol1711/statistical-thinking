p <- probEmpirica(0.05, 10)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
p <- probEmpirica(0.05, 10)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
p <- probEmpirica(0.05, 10)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
p <- probEmpirica(0.05, 100)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
p <- probEmpirica(0.05, 100)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
p <- probEmpirica(0.05, 10)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
prob_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
prob_reales <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, prob_empiricas, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, prob_reales, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 1000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 1000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 100 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 100 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 1000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.005
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.5
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
# Código modificado utilizando Bonferroni correction
probEmpiricaBonferroni <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probRealBonferroni <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values_b <- 1:50
alpha_b <- 0.05
# Calculate both probabilities
empirical_probs_b <- sapply(m_values_b, function(m) probEmpirica(alpha_b, m))
real_probs_b <- sapply(m_values_b, function(m) probReal(alpha_b, m))
# Graficar resultados
plot(m_values_b, empirical_probs_b, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real con Bonferroni Correction")
lines(m_values_b, real_probs_b, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
# Código modificado utilizando Bonferroni correction
probEmpiricaBonferroni <- function(alpha,m){
actual_alpha <- alpha / m
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, actual_alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probRealBonferroni <- function(alpha, m) {
actual_alpha <- alpha / m
return(1 - (1 - actual_alpha)^m)
}
# Different values for m
m_values_b <- 1:50
alpha_b <- 0.05
# Calculate both probabilities
empirical_probs_b <- sapply(m_values_b, function(m) probEmpirica(alpha_b, m))
real_probs_b <- sapply(m_values_b, function(m) probReal(alpha_b, m))
# Graficar resultados
plot(m_values_b, empirical_probs_b, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real con Bonferroni Correction")
lines(m_values_b, real_probs_b, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
# Código modificado utilizando Bonferroni correction
probEmpiricaBonferroni <- function(alpha,m){
actual_alpha <- alpha / m
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, actual_alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probRealBonferroni <- function(alpha, m) {
actual_alpha <- alpha / m
return(1 - (1 - actual_alpha)^m)
}
# Different values for m
m_values_b <- 1:50
alpha_b <- 0.05
# Calculate both probabilities
empirical_probs_b <- sapply(m_values_b, function(m) probEmpirica(alpha_b, m))
real_probs_b <- sapply(m_values_b, function(m) probReal(alpha_b, m))
# Graficar resultados
plot(m_values_b, empirical_probs_b, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real con Bonferroni Correction")
lines(m_values_b, real_probs_b, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probReal <- function(alpha, m) {
return(1 - (1 - alpha)^m)
}
# Different values for m
m_values <- 1:50
alpha <- 0.05
# Calculate both probabilities
empirical_probs <- sapply(m_values, function(m) probEmpirica(alpha, m))
real_probs <- sapply(m_values, function(m) probReal(alpha, m))
# Graficar resultados
plot(m_values, empirical_probs, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real")
lines(m_values, real_probs, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
# Código modificado utilizando Bonferroni correction
probEmpiricaBonferroni <- function(alpha,m){
actual_alpha <- alpha / m
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, actual_alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probRealBonferroni <- function(alpha, m) {
actual_alpha <- alpha / m
return(1 - (1 - actual_alpha)^m)
}
# Different values for m
m_values_b <- 1:50
alpha_b <- 0.05
# Calculate both probabilities
empirical_probs_b <- sapply(m_values_b, function(m) probEmpirica(alpha_b, m))
real_probs_b <- sapply(m_values_b, function(m) probReal(alpha_b, m))
# Graficar resultados
plot(m_values_b, empirical_probs_b, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real con Bonferroni Correction")
lines(m_values_b, real_probs_b, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
# Código modificado utilizando Bonferroni correction
probEmpiricaBonferroni <- function(alpha,m){
actual_alpha <- alpha / m
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, actual_alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probRealBonferroni <- function(alpha, m) {
actual_alpha <- alpha / m
return(1 - (1 - actual_alpha)^m)
}
# Different values for m
m_values_b <- 1:50
alpha_b <- 0.05
# Calculate both probabilities
empirical_probs_b <- sapply(m_values_b, function(m) probEmpiricaBonferroni(alpha_b, m))
real_probs_b <- sapply(m_values_b, function(m) probRealBonferroni(alpha_b, m))
# Graficar resultados
plot(m_values_b, empirical_probs_b, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real con Bonferroni Correction")
lines(m_values_b, real_probs_b, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
# Código modificado utilizando Bonferroni correction
probEmpiricaBonferroni <- function(alpha,m){
actual_alpha <- alpha / m
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
res <-rbinom(n, m, actual_alpha) #Resultados de los experimentos
prob <- length(res[res>0]) / n # Probabilidad empírica
return(prob)
}
# Real probability
probRealBonferroni <- function(alpha, m) {
actual_alpha <- alpha / m
return(1 - (1 - actual_alpha)^m)
}
# Different values for m
m_values_b <- 1:50
alpha_b <- 0.05
# Calculate both probabilities
empirical_probs_b <- sapply(m_values_b, function(m) probEmpiricaBonferroni(alpha_b, m))
real_probs_b <- sapply(m_values_b, function(m) probRealBonferroni(alpha_b, m))
# Graficar resultados
plot(m_values_b, empirical_probs_b, type = "o", col = "blue", pch = 16, ylim = c(0, 1),
xlab = "Número de ensayos (m)", ylab = "Probabilidad",
main = "Comparación de Probabilidad Empírica y Real con Bonferroni Correction")
lines(m_values_b, real_probs_b, type = "o", col = "red", pch = 17)
legend("bottomright", legend = c("Probabilidad Empírica", "Probabilidad Real"),
col = c("blue", "red"), pch = c(16, 17), lty = 1)
