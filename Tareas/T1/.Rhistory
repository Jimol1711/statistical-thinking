gc()
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Obtaining of the mean for each numeric value
# Calculate the mean of each numeric column
means <- sapply(hearth_database,mean)
```
View(hearth_database)
means
class(means)
typeof(means)
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Obtaining of the mean for each numeric value
# Calculate the mean of each numeric column
means <- sapply(hearth_database, mean, na.rm = FALSE)
```
means
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Obtaining of the mean for each numeric value
# Calculate the mean of each numeric column
means <- sapply(hearth_database, mean, na.rm = FALSE)
```
means
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Obtaining of the mean for each numeric value
# Calculate the mean of each numeric column
means <- sapply(hearth_database, mean, na.rm = FALSE)
```
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Obtaining of the mean for each numeric value
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
means <- means_all[!is.na(means_all)]
```
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Obtaining of the mean for each numeric value
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
```
means
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[!is.na(medians_all)]
rm(medians_all)
```
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[is.numeric(medians_all)]
rm(medians_all)
```
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[!is.na(medians_all)]
rm(medians_all)
```
medians
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Loop through each column
for (col in names(hearth_database)) {
# Try to convert the column to numeric
converted_col <- as.numeric(hearth_database[[col]])
# If no NA values are introduced by the conversion, keep the numeric column
if (!any(is.na(converted_col)) || all(is.na(hearth_database[[col]]))) {
hearth_database[[col]] <- converted_col
}
}
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[!is.na(medians_all)]
rm(medians_all)
```
converted_col
means
str(hearth_database)
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Loop through each column
for (col in names(hearth_database)) {
# Try to convert the column to numeric
converted_col <- as.numeric(hearth_database[[col]])
# If no NA values are introduced by the conversion, keep the numeric column
if (!any(is.na(converted_col)) || all(is.na(hearth_database[[col]]))) {
hearth_database[[col]] <- converted_col
}
}
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[is.numeric(medians_all)]
rm(medians_all)
```
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Loop through each column
for (col in names(hearth_database)) {
# Try to convert the column to numeric
converted_col <- as.numeric(hearth_database[[col]])
# If no NA values are introduced by the conversion, keep the numeric column
if (!any(is.na(converted_col)) || all(is.na(hearth_database[[col]]))) {
hearth_database[[col]] <- converted_col
}
}
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[!is.numeric(medians_all)]
rm(medians_all)
```
medians
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Loop through each column
for (col in names(hearth_database)) {
# Try to convert the column to numeric
converted_col <- as.numeric(hearth_database[[col]])
# If no NA values are introduced by the conversion, keep the numeric column
if (!any(is.na(converted_col)) || all(is.na(hearth_database[[col]]))) {
hearth_database[[col]] <- converted_col
}
}
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[as.numeric(medians_all)]
rm(medians_all)
```
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Loop through each column
for (col in names(hearth_database)) {
# Try to convert the column to numeric
converted_col <- as.numeric(hearth_database[[col]])
# If no NA values are introduced by the conversion, keep the numeric column
if (!any(is.na(converted_col)) || all(is.na(hearth_database[[col]]))) {
hearth_database[[col]] <- converted_col
}
}
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[!as.numeric(medians_all)]
rm(medians_all)
```
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Making numeric values numeric
for (col in names(hearth_database)) {
converted_col <- as.numeric(hearth_database[[col]])
# If no NA values are introduced by the conversion, keep the numeric column
if (!any(is.na(converted_col)) || all(is.na(hearth_database[[col]]))) {
hearth_database[[col]] <- converted_col
}
}
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[as.numeric(medians_all)]
rm(medians_all)
```
# Import and reading of csv file hearth_database.csv
hearth_database <- read.table(file="hearth_database.csv",header=T,sep=",")
# Making numeric values numeric
for (col in names(hearth_database)) {
converted_col <- as.numeric(hearth_database[[col]])
# If no NA values are introduced by the conversion, keep the numeric column
if (!any(is.na(converted_col)) || all(is.na(hearth_database[[col]]))) {
hearth_database[[col]] <- converted_col
}
}
# Obtaining of the mean for each numeric attribute
# Calculate the mean of each numeric column
means_all <- sapply(hearth_database, mean)
# The mean of each numeric column is on the variable means
means <- means_all[!is.na(means_all)]
rm(means_all)
# Obtaining of the median for each numeric attribute
# Calculate the median of each numeric column
medians_all <- sapply(hearth_database, median)
# The median of each numeric column is on the variable medians
medians <- medians_all[!is.na(medians_all)]
rm(medians_all)
```
medians
